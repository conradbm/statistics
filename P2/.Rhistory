rbinom(50, 1, 0.2)
rbinom(1, 50, 0.2)
rbinom(50, 1, 0.2)
my_rbinom.test(x=50, n=1, p=0.2)
#sample randomly from a binomial (number of trials, probability of success)
my_rbinom <- rbinom(50, 1, 0.2)
my_rbinom.test(x=50, n=1, p=0.2)
my_rbinom <- rbinom(50, 1, 0.2)
my_rbinom[x==1]
# P2 code
my_rbinom[1==1]
my_rbinom <- rbinom(50, 1, 0.2)
count=0
for (out in my_rbinom) {
if(out==1){
count = count + 1
}
}
print(count)
print(50)
#sample randomly from a binomial (number of trials, probability of success)
my_rbinom <- rbinom(50, 1, 0.2)
count_1=0
count_0=0
for (out in my_rbinom) {
if(out==1){
count_1 = count_1 + 1
}
else{
count_0 = count_0 + 1
}
}
print(50)
print(count_1)
print(count_0)
print(count_1)
print(count_0)
print(count_1 / count_0)
my_rbinom <- rbinom(50, 1, 0.2)
my_rbinom
print(50)
print(count_1)
print(count_0)
print(count_1 / count_0)
my_rbinom_testb = apply(matrix(1:N, ncol = 1), 1, function(x) rbinom(n, 1, 0.4))
# P2 code
#Counter number of occurances of a number in a dist
counts <- function(n, dist){
counter=0
for (item in my_rbinom) {
if(item==n){
counter = counter + 1
}
}
return(counter)
}
#Sample a distribution n number of times
sampling <- function(n) {
for(i in 1:n)
{
vector[i] <- rbinom(50,1,0.4)
}
return(vector)
}
#track the sample means as sample sizes grow.
mean_tracking = function(n, dist) {
x = sample(dist$value, size = n, replace = TRUE, prob = dist$prob)
s = cumsum(x)
r = s/(1:n)
return(r)
}
#sample randomly from a binomial (number of trials, probability of success)
my_rbinom <- rbinom(50, 1, 0.2)
my_rbinom
num_ones = counts(1,my_rbinom)
num_zeros = counts(0, my_rbinom)
num_ones
num_zeros
N=10000
my_rbinom_testb = apply(matrix(1:N, ncol = 1), 1, function(x) rbinom(n, 1, 0.4))
my_rbinom_testb = apply(matrix(1:N, ncol = 1), 1, function(x) rbinom(N, 1, 0.4))
# Simulate 10000 trials and Plot the Histogram to see the results
N=10000
my_rbinom_testb = apply(matrix(1:N, ncol = 1), 1, function(x) rbinom(N, 1, 0.4))
hist(colSums(result)/n, xlab = expression(bar(X)[n]), main = "", prob = TRUE)
mean(colSums(result)/n)
sd(colSums(result/n))
sdv/sqrt(n)
result = apply(matrix(1:N, ncol = 1), 1, function(x) rbinom(N, 1, 0.4))
hist(colSums(result)/n, xlab = expression(bar(X)[n]), main = "", prob = TRUE)
mean(colSums(result)/n)
sd(colSums(result/n))
sdv/sqrt(n)
N=10000
result = apply(matrix(1:N, ncol = 1), 1, function(x) rbinom(N, 1, 0.4))
hist(colSums(result)/N, xlab = expression(bar(X)[N]), main = "", prob = TRUE)
mean(colSums(result)/N)
sd(colSums(result/N))
sdv/sqrt(N)
